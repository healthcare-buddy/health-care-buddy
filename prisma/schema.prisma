generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]

  role       String?
  banned     Boolean?
  banReason  String?
  banExpires DateTime?
  Patient    Patient?

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  impersonatedBy String?

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Patient {
  id                 String             @id @default(cuid())
  userId             String             @unique
  age                Int
  gender             Gender
  phone              String
  language           Language           @default(ENGLISH)
  user               User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  dischargeSummaries DischargeSummary[]
  followUpPlans      FollowUpPlan[]
  medications        Medication[]
  progressReports    ProgressReport[]
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model DischargeSummary {
  id                   String         @id @default(cuid())
  patientId            String
  fileName             String
  fileUrl              String
  diagnosis            String
  medications          String
  treatmentSummary     String
  recoveryInstructions String
  followUpRequired     String         @default("")
  restrictions         String         @default("")
  parsedAt             DateTime       @default(now())
  patient              Patient        @relation(fields: [patientId], references: [id], onDelete: Cascade)
  followUpPlans        FollowUpPlan[]
  createdAt            DateTime       @default(now())
}

model FollowUpPlan {
  id                 String           @id @default(cuid())
  patientId          String
  dischargeSummaryId String
  isConfirmed        Boolean          @default(false)
  patient            Patient          @relation(fields: [patientId], references: [id], onDelete: Cascade)
  dischargeSummary   DischargeSummary @relation(fields: [dischargeSummaryId], references: [id], onDelete: Cascade)
  appointments       Appointment[]
  tests              Test[]
  vaccines           Vaccine[]
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
}

model Appointment {
  id             String       @id @default(cuid())
  followUpPlanId String
  type           String
  description    String
  scheduledDate  DateTime
  isCompleted    Boolean      @default(false)
  notes          String?
  followUpPlan   FollowUpPlan @relation(fields: [followUpPlanId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())
}

model Test {
  id             String       @id @default(cuid())
  followUpPlanId String
  name           String
  description    String
  scheduledDate  DateTime
  isCompleted    Boolean      @default(false)
  results        String?
  followUpPlan   FollowUpPlan @relation(fields: [followUpPlanId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())
}

model Vaccine {
  id             String       @id @default(cuid())
  followUpPlanId String
  name           String
  description    String
  scheduledDate  DateTime
  isCompleted    Boolean      @default(false)
  administeredAt DateTime?
  followUpPlan   FollowUpPlan @relation(fields: [followUpPlanId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())
}

model Medication {
  id           String               @id @default(cuid())
  patientId    String
  name         String
  dosage       String
  frequency    String
  duration     String
  instructions String
  sideEffects  String?
  priority     Priority             @default(MEDIUM)
  isActive     Boolean              @default(true)
  patient      Patient              @relation(fields: [patientId], references: [id], onDelete: Cascade)
  reminders    MedicationReminder[]
  tracking     MedicationTracking[]
  createdAt    DateTime             @default(now())
}

model MedicationReminder {
  id           String     @id @default(cuid())
  medicationId String
  time         String
  isEnabled    Boolean    @default(true)
  lastSent     DateTime?
  medication   Medication @relation(fields: [medicationId], references: [id], onDelete: Cascade)
  createdAt    DateTime   @default(now())
}

model MedicationTracking {
  id           String     @id @default(cuid())
  medicationId String
  date         DateTime
  taken        Boolean    @default(false)
  takenAt      DateTime?
  notes        String?
  medication   Medication @relation(fields: [medicationId], references: [id], onDelete: Cascade)
  createdAt    DateTime   @default(now())

  @@unique([medicationId, date])
}

model ProgressReport {
  id                    String   @id @default(cuid())
  patientId             String
  reportDate            DateTime @default(now())
  completedAppointments Int      @default(0)
  missedAppointments    Int      @default(0)
  medicationAdherence   Float    @default(0)
  overallProgress       String
  notes                 String?
  patient               Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  createdAt             DateTime @default(now())
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Language {
  ENGLISH
  HINDI
  GUJARATI
}

enum Priority {
  HIGH
  MEDIUM
  LOW
}
